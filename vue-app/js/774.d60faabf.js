"use strict";(self["webpackChunktest"]=self["webpackChunktest"]||[]).push([[774],{4336:function(t,a,e){e.r(a),e.d(a,{default:function(){return D}});var l=e(6768),n=e(4232),s=e.p+"img/avatar.3ee3a9d5.jpg",i=e(144),o=e(1387);const c={class:"blog-detail-container"},u={class:"blog-detail-content animate__animated animate__fadeIn"},r={class:"blog-meta"},v={class:"blog-date"},m={class:"blog-category"},d={class:"blog-views"},p={class:"blog-title"},g={class:"blog-tags"},h=["innerHTML"],k={class:"blog-comments"},L={class:"comment-form"},b={class:"comments-list"},_={class:"comment-avatar"},f=["src","alt"],w={class:"comment-content"},y={class:"comment-header"},S={class:"comment-author"},C={class:"comment-date"},B={class:"comment-text"};var I={__name:"BlogDetail",setup(t){(0,o.lq)();const a=(0,i.KR)(""),e=(0,i.KR)({id:1,title:"Spring Boot 最佳实践指南",content:"\n    <h2>引言</h2>\n    <p>Spring Boot已经成为Java开发中最流行的框架之一，它极大地简化了Spring应用的开发流程。本文将分享一些在实际项目中总结的Spring Boot最佳实践。</p>\n\n    <h2>1. 项目结构规范</h2>\n    <p>良好的项目结构是保证代码可维护性的基础。建议按照以下方式组织代码：</p>\n    <ul>\n      <li>controller：处理HTTP请求</li>\n      <li>service：业务逻辑层</li>\n      <li>repository：数据访问层</li>\n      <li>model：数据模型</li>\n      <li>config：配置类</li>\n      <li>util：工具类</li>\n    </ul>\n\n    <h2>2. 配置管理</h2>\n    <p>合理的配置管理可以提高应用的灵活性：</p>\n    <ul>\n      <li>使用YAML代替properties文件</li>\n      <li>利用profile进行环境隔离</li>\n      <li>敏感信息使用加密配置</li>\n    </ul>\n\n    <h2>3. 依赖注入最佳实践</h2>\n    <p>依赖注入是Spring的核心特性，建议：</p>\n    <ul>\n      <li>优先使用构造器注入</li>\n      <li>使用@Autowired注解时指定required属性</li>\n      <li>合理使用作用域注解</li>\n    </ul>\n  ",date:"2023-05-15",category:1,tags:["Spring Boot","Java"],views:1250,comments:[{id:1,author:"张三",avatar:"https://avatars.githubusercontent.com/u/1?v=4",content:"文章写得很详细，对项目结构的建议特别有帮助！",date:"2023-05-16"},{id:2,author:"李四",avatar:"https://avatars.githubusercontent.com/u/2?v=4",content:"配置管理这部分讲得很好，学到了很多。",date:"2023-05-17"}]}),I=t=>new Date(t).toLocaleDateString("zh-CN"),T=t=>{const a={1:"Java开发",2:"系统架构",3:"性能优化",4:"微服务"};return a[t]||""},X=()=>{if(!a.value.trim())return;const t={id:e.value.comments.length+1,author:"访客用户",avatar:"https://avatars.githubusercontent.com/u/3?v=4",content:a.value,date:(new Date).toISOString().split("T")[0]};e.value.comments.unshift(t),a.value=""};return(0,l.sV)((()=>{e.value.views++})),(t,i)=>{const o=(0,l.g2)("el-tag"),D=(0,l.g2)("el-input"),E=(0,l.g2)("el-button");return(0,l.uX)(),(0,l.CE)("div",c,[(0,l.Lk)("div",u,[(0,l.Lk)("div",r,[(0,l.Lk)("span",v,(0,n.v_)(I(e.value.date)),1),(0,l.Lk)("span",m,(0,n.v_)(T(e.value.category)),1),(0,l.Lk)("span",d,(0,n.v_)(e.value.views)+" 阅读",1)]),(0,l.Lk)("h1",p,(0,n.v_)(e.value.title),1),(0,l.Lk)("div",g,[((0,l.uX)(!0),(0,l.CE)(l.FK,null,(0,l.pI)(e.value.tags,(t=>((0,l.uX)(),(0,l.Wv)(o,{key:t,effect:"plain",size:"small"},{default:(0,l.k6)((()=>[(0,l.eW)((0,n.v_)(t),1)])),_:2},1024)))),128))]),(0,l.Lk)("div",{class:"blog-content",innerHTML:e.value.content},null,8,h),i[2]||(i[2]=(0,l.Lk)("div",{class:"blog-author"},[(0,l.Lk)("div",{class:"author-avatar"},[(0,l.Lk)("img",{src:s,alt:"作者头像"})]),(0,l.Lk)("div",{class:"author-info"},[(0,l.Lk)("h3",null,"关于作者"),(0,l.Lk)("p",null,"资深Java开发工程师，拥有多年微服务架构和性能优化经验。")])],-1)),(0,l.Lk)("div",k,[(0,l.Lk)("h2",null,"评论 ("+(0,n.v_)(e.value.comments.length)+")",1),(0,l.Lk)("div",L,[(0,l.bF)(D,{modelValue:a.value,"onUpdate:modelValue":i[0]||(i[0]=t=>a.value=t),type:"textarea",rows:3,placeholder:"写下你的评论..."},null,8,["modelValue"]),(0,l.bF)(E,{type:"primary",onClick:X},{default:(0,l.k6)((()=>i[1]||(i[1]=[(0,l.eW)("发表评论")]))),_:1})]),(0,l.Lk)("div",b,[((0,l.uX)(!0),(0,l.CE)(l.FK,null,(0,l.pI)(e.value.comments,(t=>((0,l.uX)(),(0,l.CE)("div",{key:t.id,class:"comment-item"},[(0,l.Lk)("div",_,[(0,l.Lk)("img",{src:t.avatar,alt:t.author},null,8,f)]),(0,l.Lk)("div",w,[(0,l.Lk)("div",y,[(0,l.Lk)("span",S,(0,n.v_)(t.author),1),(0,l.Lk)("span",C,(0,n.v_)(I(t.date)),1)]),(0,l.Lk)("p",B,(0,n.v_)(t.content),1)])])))),128))])])])])}}},T=e(1241);const X=(0,T.A)(I,[["__scopeId","data-v-1faf8ccb"]]);var D=X}}]);
//# sourceMappingURL=774.d60faabf.js.map